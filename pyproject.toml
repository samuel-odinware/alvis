[project]
authors = [
  {name = "Samuel Moore", email = "samuel@odinware.com"},
]
dependencies = [
  "loguru>=0.5.3",
  "httpx>=0.21.3",
  "pandas>=1.4.0",
  "sqlalchemy[asyncio]>=1.4.31",
  "tqdm>=4.62.3",
  "pydantic[dotenv]>=1.9.0",
  "asyncclick>=8.0.3.2",
  "psycopg2>=2.9.3"]
description = ""
license = {text = "MIT"}
name = ""
requires-python = ">=3.10"
version = ""

[project.urls]
homepage = ""

[project.optional-dependencies]
[tool]
[tool.pdm]
[tool.pdm.scripts]
cli = {call = "alvis.cli:cli"}
ingest_data = "python alvis/data_ingest/ingest_data.py"
[tool.pdm.dev-dependencies]
documenting = [
  "Pygments>=2.11.2",
  "commitizen>=2.20.4",
  "mkdocs>=1.2.3",
  "mkdocs-autorefs>=0.3.1",
  "mkdocs-material>=8.1.7",
  "mkdocs-material-extensions>=1.0.3",
  "mkdocstrings>=0.17.0",
  "pymdown-extensions>=9.1",
]
formatting = [
  "isort>=5.10.1",
  "pyupgrade>=2.31.0",
  "black[jupyter]>=21.12b0",
]
linting = [
  "darglint>=1.8.1",
  "pydocstyle[toml]>=6.1.1",
  "pylint>=2.12.2",
  "pylint-pydantic>=0.1.4",
]
security = [
  "bandit>=1.7.1",
  "safety>=1.10.3",
]
testing = [
  "coverage[toml]>=6.2",
  "hypothesis>=6.36.0",
  "pytest>=6.2.5",
  "pytest-cov>=3.0.0",
  "pytest-describe>=2.0.1",
  "pytest-expecter>=2.3",
]

[tool.black]
# https://github.com/psf/black
line-length = 100
target_version = ['py310']

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$major.$minor.$patch$prerelease"
version = "0.0.0"
version_files = [
  "pyproject.toml:version",
]

[tool.coverage.run]
branch = true
data_file = ".cache/coverage"
source = ["alvis"]

[tool.coverage.report]
show_missing = true

[tool.darglint]
# https://github.com/terrencepreilly/darglint
docstring_style = "google"
strictness = "long"

[tool.isort]
# https://github.com/timothycrosley/isort/
line_length = 100
py_version = 310

include_trailing_comma = true
indent = 4
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
multi_line_output = 3
profile = "black"
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pydocstyle]
ignore = [
  "D100",
  "D101",
  "D104",
  "D203",
  "D213",
  "D406",
  "D407",
  "D413",
]

[tool.pylint.master]
fail-under = 8
jobs = 4
load-plugins = [
  "pylint_pydantic",
]

[tool.pylint.basic]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.message_control]
# https://docs.pylint.org/en/v2.11.1/user_guide/message-control.html
# Disable pylint warning messages. To work with black disable C0330 and C0326
disable = [
  "C0330", # Wrong hanging indent
  "C0326", # Wrong number of spaces
  "missing-module-docstring",
  "missing-class-docstring",
  "too-few-public-methods", # "R0801",
]

[tool.pyright]
include = ["hooks", "tests", "alvis"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__", "__pypackages__"]
testpaths = ["tests"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
  "--cov-report=html",
  "--cov-report=term-missing:skip-covered",
  "--no-cov-on-fail",
  "--cov",
]

[build-system]
build-backend = "pdm.pep517.api"
requires = ["pdm-pep517"]
